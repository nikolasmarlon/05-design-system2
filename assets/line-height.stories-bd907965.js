var i=Object.defineProperty;var n=(e,t)=>i(e,"name",{value:t,configurable:!0});import{c as o,A as c,M as d}from"./Props-dd34ead5.js";import"./index-3395707a.js";import"./iframe-b9b76156.js";import{T as l}from"./TokensGrid-c3a28fe5.js";import{l as u}from"./index-e12bbcad.js";import"./string-be5383b3.js";import"./index-2a9eaebb.js";import"./es.map.constructor-b333fc03.js";import"./es.number.to-fixed-b4737618.js";import"./jsx-runtime-7f143cf2.js";function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},m.apply(this,arguments)}n(m,"_extends");const g={},y="wrapper";function p({components:e,...t}){return o(y,m({},g,t,{components:e,mdxType:"MDXLayout"}),o(d,{title:"Tokens/Line Heights",mdxType:"Meta"}),o("h1",null,"Line Heights"),o(l,{tokens:u,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Line Heights",tags:["stories-mdx"],includeStories:["__page"]},f={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>o(c,{mdxStoryNameToKey:f,mdxComponentAnnotations:r},o(p,null))};const X=["__page"];export{X as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=line-height.stories-bd907965.js.map
